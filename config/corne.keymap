/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        shift_caps: shift_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_CAPS";
            #binding-cells = <0>;
            bindings = <&kt LSHIFT>, <&caps_word>, <&kp CAPS>;
        };

        hrm: home_row_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <13 14 15 16 19 20 21 22>;
            flavor = "tap-preferred";
            tapping-term-ms = <275>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        layer_stick: layer_stick {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_STICK";
            bindings = <&mo>, <&sk>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default {
            // -----------------------------------------------------------------------------------------
            // | ESC  |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  | BSPC |
            // | TAB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |  ,  |  .  |  /  | ENT  |
            //                   | CTRL | LWR | SPC |   | GUI | RSE | ALT |

            bindings = <
&kp ESC      &kp Q        &kp W        &kp E         &kp R                    &kp T        &kp Y    &kp U         &kp I         &kp O        &kp P           &kp BSPC
&kp TAB      &hrm LGUI A  &hrm LALT S  &hrm LCTRL D  &hrm LSHIFT F            &kp G        &kp H    &hrm RSHFT J  &hrm RCTRL K  &hrm RALT L  &hrm RGUI SEMI  &kp SQT
&shift_caps  &kp Z        &kp X        &kp C         &kp V                    &kp B        &kp N    &kp M         &kp COMMA     &kp DOT      &kp FSLH        &key_repeat
                                       &mo 3         &layer_stick 1 LEFT_ALT  &kp SPACE    &kp RET  &mo 2         &kp RCTRL
            >;
        };

        num_nav {
            // -----------------------------------------------------------------------------------------
            // |  `  |  1  |  2  |  3  |   4   |  5  |   |  6   |  7   |  8   |  9  |   0   | DEL |
            // |     |     |     |     |       |     |   | LFT  | DWN  |  UP  | RGT | VOLUP |     |
            // |     | BT1 | BT2 | BT3 | BTCLR | UNL |   | HOM  | PDN  | PUP  | END | VOLDN |     |
            //                   |     |       |     |   | PLAY | NEXT | PREV |

            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6    &kp N7         &kp N8       &kp N9     &kp N0   &kp LC(BACKSPACE)
&trans     &trans  &trans  &trans  &trans  &trans    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &kp INS  &trans
&trans     &trans  &trans  &trans  &trans  &trans    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &trans   &trans
                           &trans  &trans  &trans    &trans    &trans         &trans
            >;
        };

        sym_fun {
            // -----------------------------------------------------------------------------------------
            // |  ~  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |     |
            // |     | F7  | F8  | F9  | F10 | F11 |   | F12 |  -  |  =  |  [  |  ]  |  \  |
            // |     | F1  | F2  | F3  | F4  | F5  |   | F6  |  _  |  +  |  {  |  }  |     |
            //                   |     |     |     |   |     |     |     |

            bindings = <
&kp TILDE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS               &kp ASTRK        &kp LPAR       &kp RPAR       &trans
&trans     &kp F7    &kp F8  &kp F9    &kp F10   &kp F11      &kp F12    &mt RIGHT_SHIFT MINUS  &mt RCTRL EQUAL  &mt RALT LBKT  &mt RGUI RBKT  &kp BSLH
&trans     &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &kp F6     &kp UNDER              &kp PLUS         &kp LBRC       &kp RBRC       &trans
                             &trans    &trans    &trans       &trans     &trans                 &trans
            >;
        };

        system {
            bindings = <
&bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &kp C_PREV  &kp C_NEXT  &kp C_PP  &kp DEL
&kp C_BRI_UP  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans      &trans      &trans    &kp C_VOLUME_UP
&kp C_BRI_DN  &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans      &trans      &trans    &kp C_VOL_DN
                                          &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
